/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import javax.swing.*;
import java.awt.event.WindowEvent;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

public class Login extends javax.swing.JFrame {

    private static final int MAX_ATTEMPTS = 3;
    private int attempts;

    private String timestamp;

    /**
     * Creates new form Login
     */
    public Login() throws Exception {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() throws Exception {

        jPasswordField1 = new javax.swing.JPasswordField();
        jPassword = new javax.swing.JPasswordField();
        jtxtUserName = new javax.swing.JTextField();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        jtbnReset = new java.awt.Button();
        jtbnSubmit = new java.awt.Button();
        jtbnExit = new java.awt.Button();
        label3 = new java.awt.Label();

        jPasswordField1.setText("jPasswordField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordActionPerformed(evt);
            }
        });

        label1.setText("Username:");

        label2.setText("Password:");

        jtbnReset.setLabel("Reset");
        jtbnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtbnResetActionPerformed(evt);
            }
        });

        jtbnSubmit.setLabel("Submit");
        jtbnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jtbnSubmitActionPerformed(evt);
                } catch (Exception ex) {
                    System.out.println("Submit exception occurred " + ex);
                }
            }
        });

        jtbnExit.setLabel("Exit ");
        jtbnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtbnExitActionPerformed(evt);
            }
        });

        label3.setFont(new java.awt.Font("Lucida Grande", 3, 24)); // NOI18N
        label3.setText("SDEV460: User Login ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jtbnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jtxtUserName, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                .addComponent(jPassword))
                            .addComponent(jtbnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jtbnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtxtUserName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtbnReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtbnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtbnExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64))
        );

        label3.getAccessibleContext().setAccessibleName(" User Login ");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtbnExitActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jtbnExitActionPerformed
        // Exit Button

        System.exit(0);
    }// GEN-LAST:event_jtbnExitActionPerformed

    private void jtbnResetActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jtbnResetActionPerformed

        jPassword.setText(null);
        jtxtUserName.setText(null);

    }// GEN-LAST:event_jtbnResetActionPerformed

    private void jPasswordActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jPasswordActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jPasswordActionPerformed

    private void jtbnSubmitActionPerformed(java.awt.event.ActionEvent evt) throws Exception  {// GEN-FIRST:event_jtbnSubmitActionPerformed

        String password = String.valueOf(jPassword.getPassword());
        String username = jtxtUserName.getText();

        if (!login(username, password)) {
            if (attempts == MAX_ATTEMPTS) {
                JOptionPane.showMessageDialog(null, " Max Login Attempts, GoodBye!", "Login Error",
                        JOptionPane.ERROR_MESSAGE);
                System.exit(0);
            }
            JOptionPane.showMessageDialog(null, "Invalid UserName or Password", "Login Error",
                    JOptionPane.ERROR_MESSAGE);
            jPassword.setText(null);
            jtxtUserName.setText(null);
        } else {
            Login_s Info = new Login_s();
            Info.setVisible(true);


        }
    }// GEN-LAST:event_jtbnSubmitActionPerformed

    public int getAttempts() {
        return attempts;
    }

    public boolean login(String username, String password) throws Exception  {
        String timestamp = new SimpleDateFormat("yyyy/MM/dd  HH:mm:ss").format(new Date());
        if (attempts == MAX_ATTEMPTS) {
            String log = "Username:" + username + "Max Login Attempts, Timestamp at: " + timestamp + "\n";
            BufferedWriter writer = null;

            try {
                writer = new BufferedWriter(new FileWriter("log.txt", true));
                writer.write(log);
            } // print error message if there is one
            catch (IOException io) {
                System.out.println("File IO Exception" + io.getMessage());
            } // close the file
            finally {
                try {
                    if (writer != null) {
                        writer.close();
                    }
                } // print error message if there is one
                catch (IOException io) {
                    System.out.println("Issue closing the file." + io.getMessage());
                }

            } // close the file
            return false;
        }

        User user = User.getUser(username, password);

        if (user != null) {
            jtxtUserName.setText(null);
            jPassword.setText(null);
            systemExit();

            String log = "Username:" + username + "  Successful Login, Timestamp at: " + timestamp + "\n";
            BufferedWriter writer = null;

            try {
                writer = new BufferedWriter(new FileWriter("log2.txt", true));
                writer.write(log);
            } // print error message if there is one
            catch (IOException io) {
                System.out.println("File IO Exception" + io.getMessage());
            } // close the file
            finally {
                try {
                    if (writer != null) {
                        writer.close();
                    }
                } // print error message if there is one
                catch (IOException io) {
                    System.out.println("Issue closing the file." + io.getMessage());
                }

            }
            return true;
        } else {

            String log = "Username:" + username + "  Unsuccessful Login, Timestamp at: " + timestamp + "\n";
            BufferedWriter writer = null;

            try {
                writer = new BufferedWriter(new FileWriter("log3.txt", true));
                writer.write(log);
            } // print error message if there is one
            catch (IOException io) {
                System.out.println("File IO Exception" + io.getMessage());
            } // close the file
            finally {
                try {
                    if (writer != null) {
                        writer.close();
                    }
                } // print error message if there is one
                catch (IOException io) {
                    System.out.println("Issue closing the file." + io.getMessage());
                }

            } // close the file
            attempts++;
            return false;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws Exception {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting
        // code (optional) ">
        /*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.
		 * html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Login().setVisible(true);
                } catch (Exception ex) {
                    System.out.println("Login exception occurred" + ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField jPassword;
    private javax.swing.JPasswordField jPasswordField1;
    private java.awt.Button jtbnExit;
    private java.awt.Button jtbnReset;
    private java.awt.Button jtbnSubmit;
    private javax.swing.JTextField jtxtUserName;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    // End of variables declaration//GEN-END:variables

    private void systemExit() {
        WindowEvent winClosing = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
    }
}
